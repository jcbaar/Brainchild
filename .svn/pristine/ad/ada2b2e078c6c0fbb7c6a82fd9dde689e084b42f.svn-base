
 Brainchild Syntax Coloring custom edit control version 2.5
 (C) Copyright 1993-2008 Jan van den Baard.
 All Rights Reserved.
 ==========================================================
 REVISION HISTORY (Most recent first)
 ==========================================================

 Changes 2.6
 ==========================================================
 - Now compiles cleanly in VS 2010 without CRT deprecation.
   (29-7-2012)
 - Find and replace dialogs now hide/show correctly when 
   switching between apps. No more search and replace 
   dialogs on top when activating another app. (29-7-2012)

 Changes 2.5
 ==========================================================
 - The DLL should now load whatever the problem may be with
   the configuration files. (25-6-2005)
 - The search and replace string history is now shared
   between all controls created by the same instance of the
   dll. (6-7-2005)
 - Fixed a potential multi-thread problem when a
   WM_SYSCOLORCHANGE message was received. Access to the
   control list was not synchronised. (6-7-2005)
 - Hiding the search or replace dialogs when another
   control was activated did not always succeed. Should be
   fixed now. (6-7-2005)
 - Qualifier keys are now re-evaluated when the control
   re-gains focus. (6-7-2005)
 - Searches now do not stop at the beginning or end of the
   file anymore. Searches are now start and finish at the
   place where the search was initiated. (9-7-2005)
 - The text is now rendered one pixel more to the right so
   the background color will not overlap the selection
   margin. (11-7-2005)
 - Fixed a bug with the replace all function when replacing
   inside a selection. Using it could result in crashing
   the control. Reported by Avins. (25-9-2005)
 - Fixed a rather nasty bug in the undo/redo engine.
   Passing the undo size limit with a single undo action
   containing more than the limit of changes would result
   in brainchild crashing. Fixing this bug also exposed a
   potential memory leak which has been fixed. The memory
   leak did go unnoticed because memory is allocated inside
   pools internally which did get freed properly. Reported
   by Avins. (25-9-2005)
 - Fixed a bug in the parser which would colorcode a string
   like:

   v_str = 'select * from emp where ename
   = ''SCOTT'' and deptno = 10';

   wrong. This example is in T-SQL but applied to all
   languages (there is only one parser. Reported by Shakti
   Goel. (25-9-2005)
 - Typing special characters through an ALT combination
   should work again. It used to but changes in the code
   changed that. Reported by SrdjanMK
 - Added 5 extra custom line markers which can be set,
   cleared and navigated by sending messages to the control.
   Suggested by Avins. (22-10-2005)
 - Fixed a bug in UpdateSettings() which could lock the
   control in a infinite loop when there was no default
   parser in the loaded Parser files. (22-10-2005)
 - Undoing an action which was done with a text selection
   will now reset the selection to what it was when the
   action was put on the undo/redo stack. (1-2-2006)
 - Fixed a small rendering bug concerning the current line
   marker. (1-2-2006)
 - Fixed a couple of rendering bugs concerning text
   selection using the mouse. This fix also includes a
   considerable optimization in rendering text selections.
   (4-2-2006)
 - Added the NMBC_MARKERSTATECHANGING and
   NMBC_MARKERSTATECHANGED notifications. These will be
   sent just before and after the state of a custom line
   marker has changed. With the NMBC_MARKERSTATECHANGING
   notification the changing of a marker state can be
   suppressed. Suggested by Avins (4-2-2006)
 - Added the possibility to determine the text color of
   any of the custom line markers. When one of these
   markers are set on a line and a text color is defined
   the text of the line will be rendered in the set color.
   Suggested by Avins (4-2-2006)
 - If you configure brainchild not to use the screen font
   but a selected font for printing the size of the font
   is now computed relative to the screen. This means that
   you do not have to select a _huge_ font to get a
   reasonable result on paper anymore. Please check your
   settings. (4-2-2006)
 - The added messages to control the custom line markers
   expected a line number based on 0 for the first line.
   Now 1 is expected as the first line. (5-2-2006)
 - Added the NMBC_MARGINCLICK notification message. This
   notification will allow the application to control the
   reaction on clicking inside the margin. (5-2-2006)
 - Added the possibility to configure the character width
   of the line number margin. Suggested by FCBLogin.
   (6-2-2006)
 - Added the CID_EDIT_SORTLINES hardcoded command. It will
   sort the selected lines. It is still a bit slow though...
   (8-2-2006)
 - Fixed a bug in saving the replace string list to the
   registry. Doing so would erase the find string list from
   the registry and vice versa. (9-2-2006)
 - Added the BCM_SETFINDSTRING, BCM_SETREPLACESTRING and
   BCM_SETFINDFLAGS messages. With them you can change
   the find/replace settings of the control. (9-2-2006)
 - Added the CID_FIND_SET_INCREMENTAL_MODE and the
   CID_FIND_CLEAR_INCREMENTAL_MODE hardcoded command.
   (15-2-2006)
 - Added the NMBC_FINDCHANGED notification. This is sent
   to the control parent window if one of the find settings
   change. (15-2-2006)
 - The find and replace dialogs are now also updated when
   the find/replace strings and/or flags are updated using
   the messages introduced for this purpose. Also the UI
   of the replace dialog is updated when the state of the
   text selection changes. (16-2-2006)
 - Significantly optimized the line sorting mechanism. It
   used to be very slow due to the undo/redo engine.
   Changes in the way undo information for line sorting is
   processed has sped up the line sorting greatly. In
   addition the undo/redo of line sorting now works properly
   where it did not used to. (17-2-2006)
 - Added the BCM_SETPARSER message. (18-2-2006)
 - Fixed a bug in the rendering engine which was introduced
   when optimizing the engine for text selection rendering.
   (21-2-2006)
 - Added the CID_EDIT_COMMENTSELECTION and
   CID_EDIT_UNCOMMENTSELECTION hardcoded commands. If comment
   initiators and terminators are configured these can be
   used to (un)comment text selections. (22-2-2006)
 - Removed the ' character from the bracket matching routines.
   It never really belonged there in the first place.
   (28-2-2006)
 - Added the ScrollLines configuration option. With it you can
   determine how many lines are scrolled when turning the mouse
   wheel. Must be between 1 and 10 and defaults to 3. (12-4-2006)
 - Fixed a parser bug which would incorrectly parse constucts
   like:

   TCHAR *str = "whatever\\\""; // Comment

   It would not considder the escape characters correctly.
   (23-5-2006)
 - Added the SaveTabsAsSpaces configuration option. It will,
   when set, convert all tabs to spaces before writing the
   text to the file. (28-6-2006)
 - Added the UnloadParser() API which will allow you to
   unload a parser previously loaded using the
   LoadParserFromFile() or LoadParserFromMemory()
   functions. (5-7-2006)
 - Added a parser feature which allows not to check for escape
   characters in blocks. This will allow blocks like the
   verbatim strings in C# to be parsed correctly. (11-8-2006)
 - Sources now compile under Visual Studio 2005. Note that
   the _CRT_SECURE_NO_DEPRECATE flag is defined. (25-10-2006)
 - Fixed a crash in the LoadParserFile() function when the
   parser file to load was not present. (1-5-2007)
 - Fixed all kinds of problems which could lead to crashes
   in the incremental search. (10-4-2008)
 - Added the possibility to color the background right of
   the color marker in a selected color. (14-4-2008)
 - The document name used when printing is now the filename.
   (14-4-2008)
 - Fixed a couple of rendering bugs in the margin overflow
   rendering. (9-5-2008)

 Changes 2.4
 ==========================================================
 - The control now uses LOCALE_USER_DEFAULT instead of the
   LOCALE_SYSTEM_DEFAULT to format date and time strings.
   (23-7-2004)
 - Enhanced the "Bookmark All" option is the find dialog.
   It was doing way to many redraws. (24-7-2004)
 - Made the Find and Replace dialogs non-modal. For this I
   also added the IsNonModalDialogMessage() API which
   should be called in the main message loop of the
   application. (24-7-2004)
 - Doing a WM_COPY or a CID_CLIP_COPY will now copy the
   line on which the caret is located on the clipboard when
   there is no selection to copy. (25-7-2004)
 - Pre-selection of the search text in the find/replace
   dialogs is now as follows:

   1) The current text selection if it is on one line.
   2) The word currently under the caret.
   3) The first entry of the search history.

   Previously it only did 2 and 3. (26-7-2004)
 - The column marker is now rendered using the selection
   margin color. (28-9-2004)
 - The escape key is now mapped to MarkClear in the default
   keyboard mapping. All included parser files also have
   this mapping for the escape key now. (4-10-2004)
 - Bug Fix. When the "Visible Spaces" option was turned on
   the rendering engine screwed up syntax coloring. This
   option has been present for quite some time. I wonder why
   it went unnoticed for so long... (6-10-2004)
 - Added support for background colors on keywords, text
   blocks, delimiters and numbers. Suggested by Anton Piták.
   (6-10-2004)
 - Added the option to highlight brackets including it's
   match with a configurable background color. When turned on
   it will highlight an opening bracket directly left of the
   caret and it's match or a closing bracket directly right of
   the caret including it's match. (16-10-2004)
 - The "Force" parameter of the BCM_SETTEXT message did not
   work as documented. Setting it to true forced the check if
   the file is modified whilst is should have done this when
   this parameter reads false. (17-10-2004)
 - Created an ActiveX wrapper for the control. It is a simple
   thin wrapper which will allow the control to be used in
   Visual Basic and .NET applications. Suggested by several
   people. (17-10-2004)
 - Notifications are only sent when they really have a change
   to report. Before to many notifications where issued with
   the same contents. (25-10-2004)
 - Fixed a very nasty bug in the printer routine which could
   let the control get trapped in an infinite loop. Reported
   by Avins (26-10-2004)
 - Fixed a problem when printing to a different printer than
   the default printer. Brainchild used the DC of the default
   printer to compute the printer font size. (28-10-2004)
 - Added the CID_MISC_CLEARUNDOBUFFERS command. This command
   will clear all entries from the undo/redo buffer and it
   will reset the save position. (2-11-2004)
 - Fixed a small bug in BCM_GOTOLINE. It accepted a line
   number of 0 which is invalid. (3-11-2004)
 - Added the BCM_GOTO message. It allows you to put the
   cursor on a specific line/column. (3-11-2004)
 - Fixed a problem with inserting unprintable characters when
   pressing key combinations with the CTRL or ALT key. Now
   only printable characters are inserted. (6-11-2004)
 - Added the BCM_SETSELECTIONPOINTS and BCM_GETSELECTIONPOINTS
   messages. (6-11-2004)
 - Added the BCM_INSERTTEXT message. (11-11-2004)
 - Added current line highlighting. When selected it will
   set the background color of the line on which the caret is
   located to a configurable color. Suggested by Avins.
   (20-11-2004)
 - Fixed a small problem of caret position notifications
   not triggered when using the search/replace dialogs.
   (22-2-2005)
 - Added the CID_DIALOG_PAGESETUP hardcoded function. With
   it you can set the margins, orientation etc. (24-3-2005)
 - When printing a header and/or footer a thin line is drawn
   1 millimeter below the header and above the footer. This
   makes for a clearer separation between the header/footer
   and the actual text. (24-3-2005)
 - Fixed a bug with rendering when syntax coloring was
   turned off. Both on screen and printer output was broken.
   (24-3-2005)
 - Fixed a bug in the printer routine which did not render
   set background colors when syntaxcoloring was turned
   on. Note that it will not print the default text
   background color. (25-3-2005)
 - Added the option to also print line numbers. Suggested
   by Avins. (25-3-2005)
 - Now a marker is printed in the right margin of lines
   which could not be printed on a single line. (25-3-2005)
 - The line buffer used for printing was not properly 0-
   terminated which could lead to wrong results of the
   syntax coloring parser. (27-3-2005)
 - The find/replace dialogs did not always hide when
   appropiate. (6-4-2005)
 - Added hyperlink support. This option, when turned on,
   will underline hyperlinks in the text and you can also
   CTRL+click a hyperlink to follow it. Support is added
   for "www.", "http:", "file:", "mailto:", "ftp:",
   "https:", "gopher:", "nntp:", "telnet:" and "news:"
   hyperlinks. Hyperlinks which contain blanks should be
   surrounded by double quotes. Suggested by Stephan Brenner.
   (9-4-2005)
 - Fixed an ugly bug with automatic indention turned on. It
   was possible that some garbage was inserted in the auto-
   indented line. Nasty. (11-4-2005)
 - Added the option to turn on or of the tooltips shown
   when hovering above a hyperlink. (16-4-2005)
 - Clicking inside a text selection in a read-only file
   did not unselect the block marker. Reported by Avins.
   (14-5-2005)

 Changes 2.3
 ==========================================================
 - The DllGetVersion API is no longer exported in the link
   library. Use the GetProcAddress API to get to this
   function. (2-10-2003)
 - Fixed a nasty bug which would crash the control when the
   CID_FIND_NEXT function was called with an empty search
   list. (2-10-2003)
 - The control will now load Unicode text files. The file
   will be recognized as Unicode when it starts with 0xFEFF.
   (8-10-2003)
 - The control will now also write Unicode text files. When
   a file was loaded as a Unicode text file it will
   automatically also be saved as a Unicode text file.
   (12-10-2003)
 - Added the BCM_GETUNICODEFLAG and BCM_SETUNICODEFLAG
   messages. The unicode flag controls wether or not the
   file is saved as a Unicode text file. (12-10-2003)
 - Added case fixing as suggested by Zodiakon. Note that
   syntax coloring must be enabled for case fixing to
   work since it depends on the parser to find the keywords.
   (15-5-2004)
 - Added the BCM_REPLACESELECTION message as suggested by
   Kuling. (15-5-2004)
 - Added the SolidMargin option. (25-5-2004)
 - Bug Fix. The MoveSOL() function would crash when invoked
   on an empty line. Reported by QuiOui. (23-6-2004)
 - Added the ColumnMarker option. This shows a vertical line
   at a specified offset to mark the position of a column.
   (1-7-2004)

 Changes 2.2
 ==========================================================
 - The dll now continues even if the settings files could
   not be loaded. It uses a default parser in this case.
   Suggested by Ernest Laurentin. (31-5-2003)
 - Added the LoadParserFromFile() and LoadParserFromMemory()
   APIs to load additional parser files on the fly. Also
   added the BCM_LOADPARSER message which does the same
   thing as the APIs. Suggested by Ernest Laurentin.
   (15-6-2003)
 - Bug fix. In some cases the brainchild message handlers
   could be called after the control received a WM_DESTROY
   message resulting in access violations. The WTL sample by
   Ernest Laurentin exposed this problem. Fixed. (22-6-2003)

 Changes 2.1
 ==========================================================
 - Fixed a small problem in the re-rendering after a file
   was loaded. It was possible that changed colors were not
   actually used. (23-11-2002)
 - Tweaked the rendering of the selection margin a bit. It
   now has a slightly darker border at it's right side.
   (23-11-2002)
 - Added the possibility to show line numbers. Shows upto
   line number 99999. (23-11-2002)
 - Bug fix. The search strings were saved under the name
   "Replace0.." and the replace strings under the name
   "Search0.." in the registry. Oops. (26-11-2002)
 - Added support for WM_PRINTCLIENT. However, the system
   seems to have problems with the scrollbars...
   (27-11-2002)
 - Fixed a small rendering problem with bookmarked lines
   without a selection margin present. (18-1-2003)
 - The caret now toggles between the set style and block
   style when the overwrite mode changes. (31-3-2003)
 - Added the horizontal caret type. (31-3-2003)
 - The search history size and global syntax coloring
   flag where not directly set in the existing controls
   when changing the global settings. (31-3-2003)
 - With fast scrolling turned on moving to the top of the
   file with holding down the cursor up key the movement
   stopped at line 2 instead of line 1. (3-4-2003)
 - Fixed a small rendering problem when run under Windows
   XP with ClearType activated. (25-4-2003)
 - Fixed a few minor rendering problems under Windows XP
   with bookmarked lines. (28-4-2003)
 - Added WM_MOUSEWHEEL support. (29-4-2003)

 Changes 2.0
 ==========================================================
 - Due to a harddisk crash I lost the complete change log
   (and then some...) between versions 1.6 through  1.9.
   (17-3-2002)
 - Added the BCM_GETCOLOR, BCM_SETCOLOR and BCM_INSERTLINE
   messages.
   (17-3-2002)
 - Added the "Clear Undobuffers after Save" option.
   (17-3-2002)
 - Fixed a bug in the OutputLine() function which did not
   0-terminate the line buffer properly. Holy shit...
   (30-3-2002)
 - Update the GUI of the Find and Replace dialogs a bit.
   Now the control buttons are disabled when the search
   string is empty. (30-4-2002)
 - Added the CID_FIND_MATCHBRACKET_SELECT hardcoded
   command. (19-7-2002)
 - A history of used search and replace strings used is now
   stored in the system registry. (24-7-2002)
 - Fixed a bug in the creation/restoring of the buffer
   HDC and HBITMAP. (17-8-2002)
 - The Block-terminator lookup routine could screw-up when
   re-parsing a file with blocks that terminate on the end
   of the line. (7-10-2002)

 Changes 1.4 -> 1.5
 ==========================================================

 - Removed the file filter string functionality and the
   file dialogs. This stuff really did not belong in the
   control.
 - Added result codes for the BCM_LOADFILE and the
   BCM_SAVEFILE messages.

 Changes 1.3 -> 1.4
 ==========================================================

 - Added the BCM_DISABLEFILEDIALOGS which will disable the
   functions in the control which require to open a dialog
   for file operations.
 - Changed the way files are preparsed which should result
   in faster loading times.
 - Fixed a potential problem in the boyer-moore search
   code.
 - Drop-target cursor was wrong when trying to drop text on
   a readonly control.
 - Tweaked the code to compute the printer font size a bit.
   Still not really great but it will do for now.

 Changes 1.2 -> 1.3
 ==========================================================

 - Updated the Copyright notices.

 - Changed the registry key which describes the location of
   the settings files used by the DLL.

 - Fixed a problem when trying to load the DLL on a system
   without a user name. Now the default settings files will
   be used in this case.

 - Fixed a small bug in the keyboard handling code which,
   in rare cases, could insert double characters in the
   text when only pressing a key once.

 - Added a fastscroll option.

 Changes 1.1 -> 1.2
 ==========================================================

 - The last used search and replace strings are now stored
   in and retrieved from the registry when performing
   search and replace operations. To enable this four new
   registry keys where introduced in:

   HKEY_CURRENT_USER/Software/BCDLL/CurrentVersion/

   The keys are:

   SearchString
   SearchLen
   ReplaceString
   ReplaceLen

 - The selection margin is now rendered using a pattern
   brush which results in a better contrast when it's color
   is the same as the control it's background color.

 - Fixed a problem in the undo/redo routines which did not
   keep track of the correct last saved position when the
   undo buffer grew beyond it's maximum size.

 - Fixed a bug in the BackSpace routine which did not
   refresh the screen correctly when back-spacing out of
   the view.

 - The error condition when loading and saving files is
   now saved. You can use GetLastError() when BCM_LOADFILE
   or BCM_SAVEFILE returns failure.

 - Fixed a bug in the MarkLine() routine which did not
   always rerender the correct (marked) line resulting in
   an invisible selection.

 - Fixed a bug in the printer code which resulted in less
   lines printed on a page than actually possible. This bug
   also resulted in the "pages necessary to print" counter
   to read wrong values.

 - Added two new color settings which you can use to select
   the color of selected text and the background color of
   selected text.

 - The brainchild controls will now be updated when the
   system colors change.

 - Fixed a bug in the rendering/parsing routines which
   could potentially crash brainchild.

 - Fixed a bug with files over 65535 lines long which
   caused the vertical scroller to misbehave when scrolled
   passed the 65535 lines.

 - Optimized the parser which results in a significant
   speed increase most notably on large files.

 Changes 1.0 -> 1.1
 ==========================================================

 - Fixed two bugs in the mouse block selection routines.
   First bug was that extending the current selection using
   ctrl+shift was not recognized as word selection.
   Second bug was that word selection starting at the end
   of a line ending with a delimiter did not work at all.

 - Changed block termination at the first white space to
 REVISION HISTORY (Most recent first)